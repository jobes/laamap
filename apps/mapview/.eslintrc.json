{
  "extends": ["../../.eslintrc.json"],
  "ignorePatterns": ["!**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "extends": [
        "plugin:@nx/angular",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "laamap",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "laamap",
            "style": "kebab-case"
          }
        ],
        "max-depth": ["error", 4],
        "max-lines": "warn",
        "max-nested-callbacks": ["error", 3],
        "max-statements": ["warn", 10]
      }
    },
    {
      "files": ["*.ts"],
      "excludedFiles": [
        "jest.config.ts",
        "**/*.test.ts",
        "**/*.spec.ts",
        "**/*.cy.ts",
        "src/app/cypress-helpers.ts",
        "**/cypress/**",
        "cypress.config.ts",
        "test-setup.ts",
        "src/polyfills.ts",
        "src/environments/environment.cypress.ts",
        "src/environments/environment.prod.ts",
        "src/app/transloco-testing.module.ts"
      ],
      "plugins": ["rxjs", "rxjs-angular"],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
        //"plugin:rxjs/recommended"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["apps/mapview/tsconfig.app.json"],
        "sourceType": "module"
      },
      "rules": {
        "arrow-body-style": ["warn", "as-needed"],
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^I[A-Z]",
              "match": true
            }
          },
          {
            "selector": "enum",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^E[A-Z]",
              "match": true
            }
          },
          {
            "selector": ["objectLiteralProperty"],
            "format": null,
            "modifiers": ["requiresQuotes"]
          }
        ],
        "@typescript-eslint/member-ordering": [
          "warn",
          {
            "default": [
              "static-field",
              "static-method",
              "decorated-field",
              "instance-field",
              "abstract-field",
              "constructor",
              "public-method",
              "protected-method",
              "private-method"
            ]
          }
        ],
        "no-console": "warn"
        // "rxjs-angular/prefer-takeuntil": [
        //   "error",
        //   {
        //     "alias": ["untilDestroyed", "take"],
        //     "checkComplete": true
        //   }
        // ],
        // "rxjs/suffix-subjects": [
        //   "warn",
        //   {
        //     "parameters": true,
        //     "properties": true,
        //     "suffix": "Subj",
        //     "types": {
        //       "^EventEmitter$": false
        //     },
        //     "variables": true
        //   }
        // ],
        // "rxjs/finnish": [
        //   "error",
        //   {
        //     "functions": true,
        //     "methods": true,
        //     "names": {
        //       "^(canActivate|canActivateChild|canDeactivate|canLoad|intercept|resolve|validate)$": false
        //     },
        //     "parameters": true,
        //     "properties": true,
        //     "strict": true,
        //     "types": {
        //       "^EventEmitter$": false,
        //       "^Store": false
        //     },
        //     "variables": true
        //   }
        // ],
        // "rxjs/no-compat": "error",
        // "rxjs/no-explicit-generics": "warn"
        //"rxjs/no-exposed-subjects": "warn",
        //"rxjs/no-ignored-error": "warn",
        // "rxjs/no-unsafe-switchmap": [
        //   "error",
        //   {
        //     "disallow": [
        //       "add",
        //       "create",
        //       "delete",
        //       "post",
        //       "put",
        //       "remove",
        //       "set",
        //       "update"
        //     ],
        //     "observable": "[Aa]ction(s|s\\$|\\$)$"
        //   }
        // ],
        // "rxjs/throw-error": "warn",
        // "rxjs/no-subclass": "warn"
      }
    },
    {
      "files": ["*effects.ts"],
      "rules": {
        "arrow-body-style": "off"
      }
    },
    {
      "files": ["*spec.ts"],
      "rules": {
        "max-statements": "off"
      }
    }
  ]
}
